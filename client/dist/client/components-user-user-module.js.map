{"version":3,"sources":["webpack:///./src/app/components/user/login/login.component.css","webpack:///./src/app/components/user/login/login.component.html","webpack:///./src/app/components/user/login/login.component.ts","webpack:///./src/app/components/user/profile/profile.component.css","webpack:///./src/app/components/user/profile/profile.component.html","webpack:///./src/app/components/user/profile/profile.component.ts","webpack:///./src/app/components/user/receipts/receipts.component.css","webpack:///./src/app/components/user/receipts/receipts.component.html","webpack:///./src/app/components/user/receipts/receipts.component.ts","webpack:///./src/app/components/user/register/register.component.css","webpack:///./src/app/components/user/register/register.component.html","webpack:///./src/app/components/user/register/register.component.ts","webpack:///./src/app/components/user/user.module.ts","webpack:///./src/app/components/user/user.routing.module.ts","webpack:///./src/app/core/guards/is-anonymous.guard.ts","webpack:///./src/app/core/guards/is-authenticated.guard.ts","webpack:///./src/app/core/services/user.service.ts"],"names":[],"mappings":"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","file":"components-user-user-module.js","sourcesContent":["module.exports = \".login-form {\\r\\n  margin: 135px auto;\\r\\n}\"","module.exports = \"<div class=\\\"form login-form\\\">\\r\\n  <form #formDir=\\\"ngForm\\\" [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <h1>Login Here</h1>\\r\\n    <div class=\\\"form-field\\\">\\r\\n      <input type=\\\"text\\\" class=\\\"username\\\" name=\\\"username\\\" placeholder=\\\"Username\\\" formControlName=\\\"username\\\" />\\r\\n      <i class=\\\"fa fa-user\\\" aria-hidden=\\\"true\\\"></i>\\r\\n      <div *ngIf=\\\"username.invalid && (username.dirty || username.touched)\\\" class=\\\"input-error\\\">\\r\\n        <div *ngIf=\\\"username.errors.required\\\">\\r\\n          Username is required\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-field\\\">\\r\\n      <input type=\\\"password\\\" class=\\\"pass\\\" name=\\\"password\\\" placeholder=\\\"***\\\" formControlName=\\\"password\\\" />\\r\\n      <i class=\\\"fa fa-unlock-alt\\\" aria-hidden=\\\"true\\\"></i>\\r\\n      <div *ngIf=\\\"password.invalid && (password.dirty || password.touched)\\\" class=\\\"input-error\\\">\\r\\n        <div *ngIf=\\\"password.errors.required\\\">\\r\\n          Password is required\\r\\n        </div>\\r\\n        <div *ngIf=\\\"password.errors.minlength || password.errors.maxlength\\\">\\r\\n          Password must be between 3 and 16 symbols\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <input type=\\\"submit\\\" class=\\\"submit\\\" value=\\\"Login\\\" [disabled]=\\\"loginForm.invalid\\\" />\\r\\n  </form>\\r\\n</div>\"","// Decorators and Lifehooks\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n// Forms\r\nimport { FormControl, FormGroup, Validators, AbstractControl } from '@angular/forms';\r\n\r\n// Router\r\nimport { Router } from '@angular/router';\r\n\r\n// Services\r\nimport { UserService } from '../../../core/services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loginForm = new FormGroup({\r\n      'username': new FormControl('', [\r\n        Validators.required\r\n      ]),\r\n      'password': new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(3),\r\n        Validators.maxLength(16)\r\n      ]),\r\n    });\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.userService\r\n      .login(this.loginForm.value)\r\n      .subscribe(() => {\r\n        this.router.navigate(['/home']);\r\n      });\r\n  }\r\n\r\n  get username(): AbstractControl {\r\n    return this.loginForm.get('username');\r\n  }\r\n\r\n  get password(): AbstractControl {\r\n    return this.loginForm.get('password');\r\n  }\r\n\r\n}\r\n","module.exports = \"#profile {\\r\\n  margin-top: 40px !important;\\r\\n}\\r\\n\\r\\n#avatar {\\r\\n  width: 150px;\\r\\n  height: 150px;\\r\\n}\\r\\n\\r\\n#avatar-input {\\r\\n  width: 50%;\\r\\n  margin: 10px auto;\\r\\n}\\r\\n\\r\\n.admin-panel button {\\r\\n  margin-left: 5px;\\r\\n}\\r\\n\\r\\n.favorite-books {\\r\\n  margin-bottom: 30px;\\r\\n}\\r\\n\\r\\n.favorite-books h2 {\\r\\n  font-family: 'Wendy One', sans-serif;\\r\\n  font-size: 30px;\\r\\n  font-weight: bold;\\r\\n}\\r\\n\\r\\n.no-favorite {\\r\\n  margin-bottom: 11.6em;\\r\\n}\"","module.exports = \"<div *ngIf=\\\"user\\\" id=\\\"profile\\\" class=\\\"row my-2\\\">\\r\\n  <div class=\\\"col-lg-8 order-lg-2\\\">\\r\\n    <div class=\\\"tab-content py-4\\\">\\r\\n      <div class=\\\"tab-pane active\\\">\\r\\n        <h5 class=\\\"mb-3\\\">Username: {{user.username}}</h5>\\r\\n        <div *ngIf=\\\"isAdmin\\\" class=\\\"admin-panel clear-fix\\\">\\r\\n          <button class=\\\"btn btn-danger\\\" (click)=\\\"blockComments(user.id)\\\">Block Comments</button>\\r\\n          <button class=\\\"btn btn-success\\\" (click)=\\\"unblockComments(user.id)\\\">Unblock Comments</button>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n            <h6>Role</h6>\\r\\n            <p>\\r\\n              {{user.isAdmin? 'Admin': 'User'}}\\r\\n            </p>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n            <h6>Comments</h6>\\r\\n            <p>\\r\\n              {{user.commentsCount}}\\r\\n            </p>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-12\\\">\\r\\n            <h5 class=\\\"mt-2\\\"><span class=\\\"fa fa-clock-o ion-clock float-right\\\"></span>Latest comments by {{user.username}}</h5>\\r\\n            <table class=\\\"table table-sm table-hover table-striped\\\" *ngIf=\\\"comments && comments.length > 0\\\">\\r\\n              <tbody>\\r\\n                <tr *ngFor=\\\"let c of comments\\\">\\r\\n                  <td>\\r\\n                    {{c.content | shortenString:100}} <a routerLink=\\\"/book/details/{{c.book._id}}\\\">{{c.book.title}}</a>\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n            <div [hidden]=\\\"user.commentsCount > 0\\\">\\r\\n              No comments yet\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-lg-4 order-lg-1 text-center\\\">\\r\\n    <img src=\\\"{{user.avatar}}\\\" id=\\\"avatar\\\" class=\\\"mx-auto img-fluid img-circle d-block\\\" alt=\\\"avatar\\\">\\r\\n    <ng-template [ngIf]=\\\"currentUserId === user.id || isAdmin\\\">\\r\\n      <h6 class=\\\"mt-2\\\">Change avatar (URL to a new image)</h6>\\r\\n      <label class=\\\"custom-file\\\">\\r\\n        <form #formDir=\\\"ngForm\\\" [formGroup]=\\\"avatarForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n          <input class=\\\"form-control\\\" id=\\\"avatar-input\\\" type=\\\"url\\\" name=\\\"avatar\\\" formControlName=\\\"avatar\\\" />\\r\\n          <input class=\\\"btn btn-success\\\" type=\\\"submit\\\" value=\\\"Submit\\\" [disabled]=\\\"avatarForm.invalid\\\" />\\r\\n        </form>\\r\\n      </label>\\r\\n    </ng-template>\\r\\n  </div>\\r\\n</div>\\r\\n<div *ngIf=\\\"user\\\" class=\\\"favorite-books\\\">\\r\\n  <h2>Favorite Books List</h2>\\r\\n  <app-book *ngFor=\\\"let book of user.favoriteBooks\\\" [book]=\\\"book\\\"></app-book>\\r\\n  <div [hidden]=\\\"user.favoriteBooks.length > 0\\\" class=\\\"no-favorite\\\">\\r\\n    No books to the list yet\\r\\n  </div>\\r\\n</div>\\r\\n<div *ngIf=\\\"!user\\\" class=\\\"no-results\\\">\\r\\n  <img src=\\\"https://i.imgur.com/KRVihMq.png\\\" alt=\\\"no-item-found\\\">\\r\\n</div>\"","// Decorators and Lifehooks\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\n\r\n// Router\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n// Forms\r\nimport { FormGroup, FormControl, AbstractControl, Validators } from '@angular/forms';\r\n\r\n// Services\r\nimport { UserService } from '../../../core/services/user.service';\r\nimport { CommentService } from '../../../core/services/comment.service';\r\nimport { HelperService } from '../../../core/services/helper.service';\r\n\r\n// RXJS\r\nimport { Subscription } from 'rxjs';\r\n\r\n// Custom Validators\r\nimport { isUrlValidator } from '../../../core/directives/is-url.directive';\r\n\r\n// Models\r\nimport { User } from '../../../core/models/user.model';\r\nimport { Comment } from '../../../core/models/comment.model';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit, OnDestroy {\r\n  user: User;\r\n  comments: Comment[];\r\n  avatarForm: FormGroup;\r\n  routeChangeSub$: Subscription;\r\n  currentUserId: string;\r\n  isAdmin: boolean;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private commentService: CommentService,\r\n    private userService: UserService,\r\n    private helperService: HelperService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.routeChangeSub$ = this.route.params.subscribe((params) => {\r\n      let username = params['username'];\r\n      if (username === 'mine') {\r\n        username = this.helperService.getProfile().username;\r\n      }\r\n\r\n      this.userService\r\n        .getProfile(username)\r\n        .subscribe((res) => {\r\n          this.user = res.data;\r\n          this.getComments();\r\n        });\r\n    });\r\n\r\n    this.isAdmin = this.helperService.isAdmin();\r\n    this.currentUserId = this.helperService.getProfile().id;\r\n\r\n    this.avatarForm = new FormGroup({\r\n      'avatar': new FormControl('', [\r\n        Validators.required,\r\n        isUrlValidator\r\n      ])\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.routeChangeSub$.unsubscribe();\r\n  }\r\n\r\n  getComments(): void {\r\n    this.commentService\r\n      .getLatestFiveComments(this.user.id)\r\n      .subscribe((res) => {\r\n        this.comments = res.data;\r\n      });\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.changeUserAvatar();\r\n  }\r\n\r\n  changeUserAvatar(): void {\r\n    const newAvatar = this.avatar.value;\r\n\r\n    const payload = {\r\n      id: this.user.id,\r\n      avatar: newAvatar\r\n    };\r\n\r\n    this.userService\r\n      .changeAvatar(payload)\r\n      .subscribe(() => {\r\n        this.user.avatar = newAvatar;\r\n        this.avatarForm.reset();\r\n      });\r\n  }\r\n\r\n  blockComments(id: string): void {\r\n    this.userService\r\n      .blockComments(id)\r\n      .subscribe();\r\n  }\r\n\r\n  unblockComments(id: string): void {\r\n    this.userService\r\n      .unblockComments(id)\r\n      .subscribe();\r\n  }\r\n\r\n  get avatar(): AbstractControl {\r\n    return this.avatarForm.get('avatar');\r\n  }\r\n\r\n}\r\n","module.exports = \"h1 {\\r\\n  margin-top: 50px;\\r\\n  font-family: 'Shojumaru', cursive;\\r\\n  font-size: 40px;\\r\\n  font-weight: bold;\\r\\n  text-transform: uppercase;\\r\\n}\\r\\n\\r\\n.shopping-cart {\\r\\n  width: 80%;\\r\\n  margin: 20px auto;\\r\\n}\\r\\n\\r\\n.pull-right {\\r\\n  margin: 5px;\\r\\n}\\r\\n\\r\\n.card-body {\\r\\n  background-color: #313532;\\r\\n}\\r\\n\\r\\n#book-price {\\r\\n  padding-top: 10px;\\r\\n}\\r\\n\\r\\n.text-muted {\\r\\n  margin-left: 5px;\\r\\n}\\r\\n\\r\\n.quantity {\\r\\n  float: left;\\r\\n  margin-right: 15px;\\r\\n  background-color: #EEE;\\r\\n  position: relative;\\r\\n  width: 80px;\\r\\n  overflow: hidden;\\r\\n}\\r\\n\\r\\n.quantity input {\\r\\n  margin: 0;\\r\\n  text-align: center;\\r\\n  width: 15px;\\r\\n  height: 15px;\\r\\n  padding: 0;\\r\\n  float: right;\\r\\n  color: #000;\\r\\n  font-size: 20px;\\r\\n  border: 0;\\r\\n  outline: 0;\\r\\n  background-color: #F6F6F6;\\r\\n}\\r\\n\\r\\n.quantity input.qty {\\r\\n  position: relative;\\r\\n  border: 0;\\r\\n  width: 100%;\\r\\n  height: 40px;\\r\\n  padding: 10px 25px 10px 10px;\\r\\n  text-align: center;\\r\\n  font-weight: 400;\\r\\n  font-size: 15px;\\r\\n  border-radius: 0;\\r\\n  background-clip: padding-box;\\r\\n}\\r\\n\\r\\n.no-receipts {\\r\\n  margin-bottom: 23.5em;\\r\\n}\"","module.exports = \"<h1>Your Purchase Histroy</h1>\\r\\n<div *ngIf=\\\"receipts\\\">\\r\\n  <div class=\\\"card shopping-cart\\\" *ngFor=\\\"let r of receipts; index as i\\\">\\r\\n    <div class=\\\"card-header bg-dark text-light\\\">\\r\\n      <i class=\\\"fa fa-shopping-cart\\\" aria-hidden=\\\"true\\\"></i>\\r\\n      Receipt {{i + 1}}\\r\\n      <div class=\\\"pull-right\\\">\\r\\n        Total price: <b>{{r.totalPrice | number:'1.2-2'}}&#x24;</b>\\r\\n      </div>\\r\\n      <div class=\\\"clearfix\\\"></div>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\" *ngFor=\\\"let b of r.productsInfo\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-12 col-sm-12 col-md-2 text-center\\\">\\r\\n          <img class=\\\"img-responsive\\\" src=\\\"{{b.cover}}\\\" alt=\\\"cover\\\" width=\\\"100\\\" height=\\\"150\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-12 text-sm-center col-sm-12 text-md-left col-md-6\\\">\\r\\n          <h4 class=\\\"product-name\\\"><strong>{{b.title}}</strong></h4>\\r\\n          <h4>\\r\\n            <small>{{b.author}}</small>\\r\\n          </h4>\\r\\n        </div>\\r\\n        <div class=\\\"col-12 col-sm-12 text-sm-center col-md-4 text-md-right row\\\">\\r\\n          <div id=\\\"book-price\\\" class=\\\"col-3 col-sm-3 col-md-6 text-md-right\\\">\\r\\n            <h6>\\r\\n              <strong>\\r\\n                {{b.price}} <span class=\\\"text-muted\\\">x</span>\\r\\n              </strong>\\r\\n            </h6>\\r\\n          </div>\\r\\n          <div class=\\\"col-4 col-sm-4 col-md-4\\\">\\r\\n            <div class=\\\"quantity\\\">\\r\\n              <input class=\\\"qty\\\" type=\\\"number\\\" size=\\\"4\\\" step=\\\"1\\\" name=\\\"{{b._id}}\\\" value=\\\"{{b.qty}}\\\" disabled />\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-footer bg-dark\\\">\\r\\n      <div class=\\\"pull-right\\\">\\r\\n        <div class=\\\"pull-right\\\">\\r\\n          Total price: <b>{{r.totalPrice | number:'1.2-2'}}&#x24;</b>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div *ngIf=\\\"!receipts || receipts.length === 0\\\" class=\\\"no-receipts\\\">\\r\\n  No receipts yet! You can visit the <a routerLink=\\\"/book/store/default\\\">store</a> to buy your first book!\\r\\n</div>\"","// Decorators and Lifehooks\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n// Services\r\nimport { UserService } from '../../../core/services/user.service';\r\n\r\n// Models\r\nimport { Receipt } from '../../../core/models/receipt.model';\r\n\r\n@Component({\r\n  selector: 'app-receipts',\r\n  templateUrl: './receipts.component.html',\r\n  styleUrls: ['./receipts.component.css']\r\n})\r\nexport class ReceiptsComponent implements OnInit {\r\n  receipts: Receipt[];\r\n\r\n  constructor(private userService: UserService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userService\r\n      .getPurchaseHistory()\r\n      .subscribe((res) => {\r\n        this.receipts = res.data;\r\n      });\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"form register-form\\\">\\r\\n  <form #formDir=\\\"ngForm\\\" [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <h1>Register Here</h1>\\r\\n    <div class=\\\"form-field\\\">\\r\\n      <input type=\\\"text\\\" class=\\\"username\\\" name=\\\"username\\\" placeholder=\\\"Username\\\" formControlName=\\\"username\\\" />\\r\\n      <i class=\\\"fa fa-user\\\" aria-hidden=\\\"true\\\"></i>\\r\\n      <div *ngIf=\\\"username.invalid && (username.dirty || username.touched)\\\" class=\\\"input-error\\\">\\r\\n        <div *ngIf=\\\"username.errors.required\\\">\\r\\n          Username is required\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-field\\\">\\r\\n      <input type=\\\"url\\\" class=\\\"avatar\\\" name=\\\"avatar\\\" placeholder=\\\"Url to Avatar image (optional)\\\" formControlName=\\\"avatar\\\" />\\r\\n      <i class=\\\"fas fa-image\\\" aria-hidden=\\\"true\\\"></i>\\r\\n    </div>\\r\\n    <div class=\\\"form-field\\\">\\r\\n      <input type=\\\"text\\\" class=\\\"email\\\" name=\\\"email\\\" placeholder=\\\"Email\\\" formControlName=\\\"email\\\" />\\r\\n      <i class=\\\"fa fa-envelope\\\" aria-hidden=\\\"true\\\"></i>\\r\\n      <div *ngIf=\\\"email.invalid && (email.dirty || email.touched)\\\" class=\\\"input-error\\\">\\r\\n        <div *ngIf=\\\"email.errors.required\\\">\\r\\n          Email is required\\r\\n        </div>\\r\\n        <div *ngIf=\\\"email.errors.pattern\\\">\\r\\n          Please provide a valid email address\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-field\\\">\\r\\n      <input type=\\\"password\\\" class=\\\"pass\\\" name=\\\"password\\\" placeholder=\\\"***\\\" formControlName=\\\"password\\\" />\\r\\n      <i class=\\\"fa fa-unlock-alt\\\" aria-hidden=\\\"true\\\"></i>\\r\\n      <div *ngIf=\\\"password.invalid && (password.dirty || password.touched)\\\" class=\\\"input-error\\\">\\r\\n        <div *ngIf=\\\"password.errors.required\\\">\\r\\n          Password is required\\r\\n        </div>\\r\\n        <div *ngIf=\\\"password.errors.minlength || password.errors.maxlength\\\">\\r\\n          Password must be between 3 and 16 symbols\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-field\\\">\\r\\n      <input type=\\\"password\\\" class=\\\"pass\\\" name=\\\"confirmPassword\\\" placeholder=\\\"***\\\" formControlName=\\\"confirmPassword\\\" />\\r\\n      <i class=\\\"fa fa-unlock-alt\\\" aria-hidden=\\\"true\\\"></i>\\r\\n      <div *ngIf=\\\"registerForm.errors?.mustMatch && (registerForm.touched || registerForm.dirty)\\\" class=\\\"input-error\\\">\\r\\n        Both passwords must match\\r\\n      </div>\\r\\n    </div>\\r\\n    <input type=\\\"submit\\\" class=\\\"submit\\\" value=\\\"Register\\\" [disabled]=\\\"registerForm.invalid\\\" />\\r\\n  </form>\\r\\n</div>\"","// Decorators and Lifehooks\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n// Forms\r\nimport { FormControl, FormGroup, Validators, AbstractControl } from '@angular/forms';\r\nimport { mustMatchValidator } from '../../../core/directives/must-match.directive';\r\n\r\n// Router\r\nimport { Router } from '@angular/router';\r\n\r\n// Services\r\nimport { UserService } from '../../../core/services/user.service';\r\n\r\nconst emailRegex: RegExp = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  registerForm: FormGroup;\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.registerForm = new FormGroup({\r\n      'username': new FormControl('', [\r\n        Validators.required\r\n      ]),\r\n      'avatar': new FormControl(''),\r\n      'password': new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(3),\r\n        Validators.maxLength(16)\r\n      ]),\r\n      'confirmPassword': new FormControl(''),\r\n      'email': new FormControl('', [\r\n        Validators.required,\r\n        Validators.pattern(emailRegex)\r\n      ])\r\n    }, { validators: mustMatchValidator });\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.userService\r\n      .register(this.registerForm.value)\r\n      .subscribe(() => {\r\n        this.router.navigate(['/home']);\r\n      });\r\n  }\r\n\r\n  get username(): AbstractControl {\r\n    return this.registerForm.get('username');\r\n  }\r\n\r\n  get avatar(): AbstractControl {\r\n    return this.registerForm.get('avatar');\r\n  }\r\n\r\n  get password(): AbstractControl {\r\n    return this.registerForm.get('password');\r\n  }\r\n\r\n  get confirmPassword(): AbstractControl {\r\n    return this.registerForm.get('confirmPassword');\r\n  }\r\n\r\n  get email(): AbstractControl {\r\n    return this.registerForm.get('email');\r\n  }\r\n\r\n}\r\n","// Decorators\r\nimport { NgModule } from '@angular/core';\r\n\r\n// Modules\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { UserRoutingModule } from './user.routing.module';\r\nimport { SharedModule } from '../../core/shared/shared.module';\r\n\r\n// Components\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { ReceiptsComponent } from './receipts/receipts.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    RegisterComponent,\r\n    LoginComponent,\r\n    ProfileComponent,\r\n    ReceiptsComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    UserRoutingModule\r\n  ]\r\n})\r\nexport class UserModule { }\r\n","// Decorators\r\nimport { NgModule } from '@angular/core';\r\n\r\n// Modules\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\n// Components\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { CartComponent } from '../../core/shared/cart/cart.component';\r\nimport { ReceiptsComponent } from './receipts/receipts.component';\r\n\r\n// Guards\r\nimport { IsAnonymousGuard } from '../../core/guards/is-anonymous.guard';\r\nimport { IsAuthenticatedGuard } from '../../core/guards/is-authenticated.guard';\r\n\r\nconst userRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'login',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'profile/:username',\r\n    canActivate: [IsAuthenticatedGuard],\r\n    component: ProfileComponent\r\n  },\r\n  {\r\n    path: 'purchaseHistory',\r\n    canActivate: [IsAuthenticatedGuard],\r\n    component: ReceiptsComponent\r\n  },\r\n  {\r\n    path: 'cart',\r\n    canActivate: [IsAuthenticatedGuard],\r\n    component: CartComponent\r\n  },\r\n  {\r\n    path: 'register',\r\n    canActivate: [IsAnonymousGuard],\r\n    component: RegisterComponent\r\n  },\r\n  {\r\n    path: 'login',\r\n    canActivate: [IsAnonymousGuard],\r\n    component: LoginComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(userRoutes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UserRoutingModule { }\r\n","// Decorators\r\nimport { Injectable } from '@angular/core';\r\n\r\n// Router\r\nimport {\r\n  CanActivate,\r\n  CanLoad,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  Route,\r\n  Router\r\n} from '@angular/router';\r\n\r\n// RXJS\r\nimport { Observable } from 'rxjs';\r\n\r\n// Services\r\nimport { HelperService } from '../services/helper.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class IsAnonymousGuard implements CanLoad, CanActivate {\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private helperService: HelperService\r\n  ) { }\r\n\r\n  canLoad(route: Route): Observable<boolean> | Promise<boolean> | boolean {\r\n    return this.isAnonymous();\r\n  }\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n    return this.isAnonymous();\r\n  }\r\n\r\n  private isAnonymous(): boolean {\r\n    if (!this.helperService.isLoggedIn()) {\r\n      return true;\r\n    }\r\n\r\n    this.router.navigate(['/home']);\r\n    return false;\r\n  }\r\n}\r\n","// Decorators\r\nimport { Injectable } from '@angular/core';\r\n\r\n// Router\r\nimport {\r\n  CanActivate,\r\n  CanLoad,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  Route,\r\n  Router\r\n} from '@angular/router';\r\n\r\n// RXJS\r\nimport { Observable } from 'rxjs';\r\n\r\n// Services\r\nimport { HelperService } from '../services/helper.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class IsAuthenticatedGuard implements CanLoad, CanActivate {\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private helperService: HelperService\r\n  ) { }\r\n\r\n  canLoad(route: Route): Observable<boolean> | Promise<boolean> | boolean {\r\n    return this.isAuthenticated();\r\n  }\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n    return this.isAuthenticated();\r\n  }\r\n\r\n  private isAuthenticated(): boolean {\r\n    if (this.helperService.isLoggedIn()) {\r\n      return true;\r\n    }\r\n\r\n    this.router.navigate(['/user/login']);\r\n    return false;\r\n  }\r\n}\r\n","// Decorators\r\nimport { Injectable } from \"@angular/core\";\r\n\r\n// RXJS\r\nimport { Observable } from \"rxjs\";\r\n\r\n// HTTP\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\n// Models\r\nimport { ServerResponse } from \"../models/server-response.model\";\r\nimport { User } from \"../models/user.model\";\r\nimport { Receipt } from \"../models/receipt.model\";\r\n\r\nimport { environment } from \"../../../environments/environment\";\r\n\r\nconst baseUrl =  environment.serverURL + \"/user\";\r\nconst registerEndpoint = baseUrl + \"/register\";\r\nconst loginEndpoint = baseUrl + \"/login\";\r\nconst profileEndpoint = baseUrl + \"/profile/\";\r\nconst getPurchaseHistoryEndpoint = baseUrl + \"/purchaseHistory\";\r\nconst changeAvatarEndpoint = baseUrl + \"/changeAvatar\";\r\nconst blockCommentsEndpoint = baseUrl + \"/blockComments/\";\r\nconst unblockCommentsEndpoint = baseUrl + \"/unlockComments/\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class UserService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  register(payload: object): Observable<ServerResponse<User>> {\r\n    return this.http.post<ServerResponse<User>>(registerEndpoint, payload);\r\n  }\r\n\r\n  login(payload: object): Observable<ServerResponse<User>> {\r\n    return this.http.post<ServerResponse<User>>(loginEndpoint, payload);\r\n  }\r\n\r\n  getProfile(username: string): Observable<ServerResponse<User>> {\r\n    return this.http.get<ServerResponse<User>>(profileEndpoint + username);\r\n  }\r\n\r\n  getPurchaseHistory(): Observable<ServerResponse<Receipt[]>> {\r\n    return this.http.get<ServerResponse<Receipt[]>>(getPurchaseHistoryEndpoint);\r\n  }\r\n\r\n  changeAvatar(payload: object): Observable<ServerResponse<object>> {\r\n    return this.http.post<ServerResponse<object>>(\r\n      changeAvatarEndpoint,\r\n      payload\r\n    );\r\n  }\r\n\r\n  blockComments(id: string): Observable<ServerResponse<object>> {\r\n    return this.http.post<ServerResponse<object>>(\r\n      blockCommentsEndpoint + id,\r\n      {}\r\n    );\r\n  }\r\n\r\n  unblockComments(id: string): Observable<ServerResponse<object>> {\r\n    return this.http.post<ServerResponse<object>>(\r\n      unblockCommentsEndpoint + id,\r\n      {}\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}